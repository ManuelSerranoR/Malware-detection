import glob
import gzip

counter_df = 0

paths = glob.glob("sctext_results/*")

last_end_instruct = 0
next_instruct_after_break = 0

with open("test_small.csv", "w") as w:
    w.write(",X,y"+'\n')
    for count,file_name in enumerate(paths[200:300]):
        print(file_name,count)
        next_call_after_break = ''
        last_end_instruct = 0
        last_line_read = 0
        with open("activityranges"+file_name[14:-7]) as f_ranges:
            with gzip.open(file_name, 'r') as f_sc:
                #First loop gets start and end instruction of malware being executed
                for line_ranges in f_ranges:
                    line_ranges_splitted = line_ranges.split('\t')
                    start_instruct = int(line_ranges_splitted[0])
                    end_instruct = int(line_ranges_splitted[1].split('\n')[0])
                    benign_trace = ""
                    malware_trace = ""
                    if last_end_instruct < next_instruct_after_break < start_instruct:
                        benign_trace = next_call_after_break
                    elif start_instruct <= next_instruct_after_break <= end_instruct:
                        malware_trace = next_call_after_break
                    #Second loop gets the system calls on those instruction ranges
                    for line_sc in f_sc:
                        line_sc_splitted = line_sc.split(' ')
                        if last_end_instruct < int(line_sc_splitted[0]) < start_instruct:
                            #Benign case
                            benign_trace += (line_sc_splitted[2].split('\n')[0] + str(" "))
                        elif start_instruct <= int(line_sc_splitted[0]) <= end_instruct:
                            #Malware case
                            malware_trace += (line_sc_splitted[2].split('\n')[0] + str(" "))
                        elif int(line_sc_splitted[0]) > end_instruct:
                            #Next range
                            if benign_trace != "":
                                w.write(str(counter_df)+','+benign_trace+','+str(0)+'\n')
                                #data.loc[counter_df] = [benign_trace, 0]
                                counter_df += 1
                            if malware_trace != "":
                                w.write(str(counter_df)+','+malware_trace+','+str(1)+'\n')
                                #data.loc[counter_df] = [malware_trace, 1]
                                counter_df += 1
                            next_call_after_break = (line_sc_splitted[2].split('\n')[0] + str(" "))
                            next_instruct_after_break = int(line_sc_splitted[0])
                            last_end_instruct = end_instruct
                            break
w.close()
